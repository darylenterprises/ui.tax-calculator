
name: "Tax Calculator - Azure"
on:
  push:
    branches:
      - main

jobs:
  infra:
    name: "Setup Infrastructure"
    runs-on: ubuntu-latest
    environment: prod
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    outputs:
      resource_group: ${{ steps.vars.outputs.resource_group }}
      storage_account: ${{ steps.vars.outputs.storage_account }}
      storage_container: ${{ steps.vars.outputs.storage_container }}
      cdn_profile: ${{ steps.vars.outputs.cdn_profile }}
      cdn_endpoint: ${{ steps.vars.outputs.cdn_endpoint }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_RBAC }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false


      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Apply
        run: terraform -chdir=infra apply -auto-approve

      - id: vars
        name: Set output variables
        run: |
          resource_group=$(terraform -chdir=infra output --raw resource_group)
          storage_account=$(terraform -chdir=infra output --raw storage_account_name)
          storage_container=$(terraform -chdir=infra output --raw storage_account_container)
          cdn_profile=$(terraform -chdir=infra output --raw cdn_profile_name)
          cdn_endpoint=$(terraform -chdir=infra output --raw cdn_endpoint_name)

          echo "::set-output name=resource_group::$resource_group"
          echo "::set-output name=storage_account::$storage_account"
          echo "::set-output name=storage_container::$storage_container"
          echo "::set-output name=cdn_profile::$cdn_profile"
          echo "::set-output name=cdn_endpoint::$cdn_endpoint"
          
  build:
    name: "Build"
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install packages
        run: yarn

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: react-build
          path: ./build

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: [infra, build]
    environment: prod
    env:
      STORAGE_ACCOUNT: ${{ needs.infra.outputs.storage_account }}
      STORAGE_CONTAINER: ${{ needs.infra.outputs.storage_container }}
      CDN_PROFILE: ${{ needs.infra.outputs.cdn_profile }}
      CDN_ENDPOINT: ${{ needs.infra.outputs.cdn_endpoint }}
      RESOURCE_GROUP: ${{ needs.infra.outputs.resource_group }}

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: react-build
          path: ./build

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_RBAC }}

      - name: Upload to blob storage
        run: |
          az storage blob upload-batch --account-name "${STORAGE_ACCOUNT}" -d "${STORAGE_CONTAINER}" -s ./build --overwrite
      
      - name: Purge CDN endpoint
        run: |
          az cdn endpoint purge --content-paths  "/*" --profile-name "${CDN_PROFILE}" --name "${CDN_ENDPOINT}" --resource-group "${RESOURCE_GROUP}"
      
      - name: Azure Logout
        run: |
          az logout